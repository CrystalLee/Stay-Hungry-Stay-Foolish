{"nbformat":4,"nbformat_minor":0,"metadata":{"colab":{"name":"6. Introduction to Machine Learning for Beginners","provenance":[{"file_id":"1FUhcPRBJQMdY-ONh6aiMrOg4wtXv4a86","timestamp":1591764437288}],"collapsed_sections":[]},"kernelspec":{"name":"python3","display_name":"Python 3"}},"cells":[{"cell_type":"markdown","metadata":{"id":"-tJd3v4h3wRN"},"source":["# Data Analytics vs. Machine Learning\n","https://medium.com/iotforall/data-analytics-vs-machine-learning-90d93dc06291\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"pIrc5pi17tf0"},"source":["\n","\n","## Traditional Data Analysis\n","Traditional data analysis is great at explaining data. You can generate reports or models of what happened in the past or of what’s happening today, drawing useful insights to apply to the organization.\n","\n"]},{"cell_type":"markdown","metadata":{"id":"cp1x3YW_708f"},"source":["## Machine Learning\n","Machine learning starts with the outcome variables (e.g. saving energy) and then automatically looks for predictor variables and their interactions.\n","In general, machine learning is valuable when you know what you want but you don’t know the important input variables to make that decision\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"aG25I6nk92nD"},"source":["## Example \n","<img src=\"https://drive.google.com/uc?id=1FpNUBCV0iGyEfUmY3VxykBnxGuk3JDv4\n","\" alt=\"drawing\" width=\"800\"/>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"S2jPy2nC8LtU"},"source":["\n","![alt text](https://365datascience.com/wp-content/uploads/2018/05/365-Data-Science-Infographic.jpg)\n"]},{"cell_type":"markdown","metadata":{"id":"IfVyKbZmyRrh"},"source":["# Machine Learning Algorithms\n","- [Supervised Learning](https://scikit-learn.org/stable/supervised_learning.html)\n","- Unsupervised Learning\n","- Reinforcement Learning\n","    \n","![alt text](https://artisansasylum.com/wp-content/uploads/2019/09/machine-learning-info.png)"]},{"cell_type":"markdown","metadata":{"id":"KlG7dQ-YtNbC"},"source":["## 1 Supervised Regression\n","\n","\n","\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"TzxICIl34cyu"},"source":["### 1.Linear Regression\n","\n","<img src=\"https://miro.medium.com/max/1000/1*k1sy7gPKeVlWGmemkhZ10A.png\" alt=\"drawing\" width=\"400\"/>\n"]},{"cell_type":"markdown","metadata":{"id":"KX44N0v54g01"},"source":["### 2.Polynomial Regression\n","\n","<img src=\"https://miro.medium.com/max/898/1*7XrpQGyCazvrX6nHMiZTHA.png\" alt=\"drawing\" width=\"300\"/>\n"]},{"cell_type":"markdown","metadata":{"id":"m1GxT0dS4nO9"},"source":["### 3.Logistic Regression\n","\n","<img src=\"https://miro.medium.com/max/1428/1*Vd9ZTC1zWJPtV7iXPMJk1Q.png\" alt=\"drawing\" width=\"700\"/>\n"]},{"cell_type":"markdown","metadata":{"id":"yDCnkrQIxB8B"},"source":["## 2.Supervised Classification\n"]},{"cell_type":"markdown","metadata":{"id":"K12jRpnd4vAS"},"source":["### 1.Decision Tree\n","\n","<img src=\"https://miro.medium.com/max/3200/0*7xow30weh2lVxhsp.png\" alt=\"drawing\" width=\"600\"/>\n"]},{"cell_type":"markdown","metadata":{"id":"tlz1yDVA6wib"},"source":["### 2.Random Forest\n","\n","<img src=\"https://miro.medium.com/max/1400/0*f_qQPFpdofWGLQqc.png\" alt=\"drawing\" width=\"700\"/>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"CrI3goK441p-"},"source":["### 3.Naive Bayes\n","\n","<img src=\"https://www.analyticsvidhya.com/wp-content/uploads/2015/08/Bayes_rule.png\" alt=\"drawing\" width=\"500\"/>\n"]},{"cell_type":"markdown","metadata":{"id":"nDRLJxHX46vz"},"source":["### 4.Support Vector Machine\n","\n","<img src=\"https://www.analyticsvidhya.com/wp-content/uploads/2015/10/SVM_8.png\" alt=\"drawing\" width=\"350\"/>\n","<img src=\"https://www.analyticsvidhya.com/wp-content/uploads/2015/10/SVM_9.png\" alt=\"drawing\" width=\"350\"/>"]},{"cell_type":"markdown","metadata":{"id":"SEGdZ-UW50-_"},"source":["### 5.K-Nearest Neighbor(KNN)\n","\n","<img src=\"https://static.javatpoint.com/tutorial/machine-learning/images/k-nearest-neighbor-algorithm-for-machine-learning2.png\" alt=\"drawing\" width=\"700\"/>"]},{"cell_type":"markdown","metadata":{"id":"GlJUcwSWtV1t"},"source":["## 3.Unsupervised Clustering\n","\n","\n"]},{"cell_type":"markdown","metadata":{"id":"loKKG9YK5Q8e"},"source":["### 1.K-Means\n","\n","<img src=\"https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQtP0EcvKyZGOSTaf6nVVvhHKB2U-jSt8FTqQ&usqp=CAU\" alt=\"drawing\" width=\"400\"/>"]},{"cell_type":"markdown","metadata":{"id":"RlPbdPt17_gt"},"source":["### 2.Gaussian Mixture Models (GMM)\n","\n","Two failure cases for K-Means\n","\n","<img src=\"https://miro.medium.com/max/714/1*Xvl-pXxsLAZ7gbTUuvgMtA.png\" alt=\"drawing\" width=\"300\"/>\n","\n","Expectation–Maximization (EM) Clustering using Gaussian Mixture Models (GMM)\n","\n","<img src=\"https://miro.medium.com/max/720/1*OyXgise21a23D5JCss8Tlg.gif\" alt=\"drawing\" width=\"400\"/>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"NevWil_r9A44"},"source":["### 3.DBSCAN\n","\n","Density-Based Spatial Clustering of Applications with Noise (DBSCAN)\n","\n","<img src=\"https://miro.medium.com/max/1350/1*tc8UF-h0nQqUfLC8-0uInQ.gif\" alt=\"drawing\" width=\"600\"/>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"vSbmv6CvtjqS"},"source":["## 4.Reinforcement Learning\n","\n","<img src=\"https://www.kdnuggets.com/images/mathworks-reinforcement-learning-fig1-543.jpg\" alt=\"drawing\" width=\"600\"/>"]},{"cell_type":"markdown","metadata":{"id":"cTmFI6lL-Tyo"},"source":["## 5.Others\n","- NLP (Natural Language Processing)\n","- Word2vec\n","- Association Rules\n","\n","<img src=\"https://annalyzin.files.wordpress.com/2016/04/association-rules-network-graph2.png\" alt=\"drawing\" width=\"600\"/>\n","\n","\n","- Collaborative Filtering (CF) \n","\n","<img src=\"https://miro.medium.com/max/1920/1*QvhetbRjCr1vryTch_2HZQ.jpeg\" alt=\"drawing\" width=\"800\"/>\n","\n","\n","- Neural Network\n","    > CNN\n","\n","    > RNN\n","    \n","    > Deep Learning\n","\n","<img src=\"https://miro.medium.com/max/3288/1*uAeANQIOQPqWZnnuH-VEyw.jpeg\" alt=\"drawing\" width=\"800\"/>\n","\n"]},{"cell_type":"markdown","metadata":{"id":"PcpQCNCyQObw"},"source":["# 7 Steps to Machine Learning\n","\n","![alt text](https://miro.medium.com/max/2048/0*V0GyOt3LoDVfY7y5.png)\n"]},{"cell_type":"markdown","metadata":{"id":"NV4rR7ZTQXWH"},"source":["## 1.EDA (Exploratory Data Analysis)"]},{"cell_type":"code","metadata":{"id":"QX7Kr7IVM2Mj","colab":{"base_uri":"https://localhost:8080/","height":71},"executionInfo":{"status":"ok","timestamp":1593138024663,"user_tz":-480,"elapsed":1884,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"83e35425-b76d-404f-fb35-024a8f558ae8"},"source":["#@title import libraries\n","#pip install sklearn\n","import pandas as pd\n","import numpy as np\n","\n","# visaulization\n","import matplotlib.pyplot as plt\n","%matplotlib inline\n","import matplotlib.gridspec as gridspec\n","import seaborn as sns\n","plt.style.use( 'ggplot' ) \n","\n","# 標籤編碼(Label)、獨熱編碼(OneHot)\n","from sklearn.preprocessing import LabelEncoder, OneHotEncoder \n","# 決策樹(Decision Tree)\n","from sklearn.tree import DecisionTreeClassifier\n","# 隨機森林(Random Forest)\n","from sklearn.ensemble import RandomForestClassifier\n","\n","from IPython.display import display\n","import warnings\n","warnings.filterwarnings( 'ignore' )"],"execution_count":null,"outputs":[{"output_type":"stream","text":["/usr/local/lib/python3.6/dist-packages/statsmodels/tools/_testing.py:19: FutureWarning: pandas.util.testing is deprecated. Use the functions in the public API at pandas.testing instead.\n","  import pandas.util.testing as tm\n"],"name":"stderr"}]},{"cell_type":"markdown","metadata":{"id":"T7YJKF-vZn--"},"source":["## Case Study\n","\n","<img src=\"https://miro.medium.com/max/3972/1*qTqs-DD_i5dqUtTuaVzfWw.png\" alt=\"drawing\" width=\"800\"/>\n","\n","\n","\n","#### Reference\n","- [[資料分析&機器學習] 第4.1講 : Kaggle競賽-鐵達尼號生存預測\u001e(前\n","16%排名)](https://medium.com/jameslearningnote/%E8%B3%87%E6%96%99%E5%88%86%E6%9E%90-%E6%A9%9F%E5%99%A8%E5%AD%B8%E7%BF%92-%E7%AC%AC4-1%E8%AC%9B-kaggle%E7%AB%B6%E8%B3%BD-%E9%90%B5%E9%81%94%E5%B0%BC%E8%99%9F%E7%94%9F%E5%AD%98%E9%A0%90%E6%B8%AC-%E5%89%8D16-%E6%8E%92%E5%90%8D-a8842fea7077)\n","\n","- [Kaggle – Titanic倖存預測 #2](https://chtseng.wordpress.com/2017/12/25/kaggle-titanic%e5%80%96%e5%ad%98%e9%a0%90%e6%b8%ac-2/)\n","\n","- [[機器學習專案] Kaggle競賽-鐵達尼號生存預測(Top 3%)](https://medium.com/@yulongtsai/https-medium-com-yulongtsai-titanic-top3-8e64741cc11f)"]},{"cell_type":"code","metadata":{"id":"CLE0HGzzlE6G"},"source":["#@title Load Data\n","\n","# Colab and Google Sheets — Surprisingly Powerful Combination for Data Science\n","# https://medium.com/analytics-vidhya/colab-and-google-sheets-surprisingly-powerful-combination-for-data-science-part-1-bbbb11cbd8e\n","\n","from google.colab import auth\n","auth.authenticate_user()\n","import gspread\n","from oauth2client.client import GoogleCredentials\n","gc = gspread.authorize(GoogleCredentials.get_application_default())\n","\n","# 透過 Kaggle 資料競賽網站，下載鐵達尼號資料集。(Link: https://www.kaggle.com/c/titanic/data)\n","train_csv = 'https://docs.google.com/spreadsheets/d/1ml-0h1G1w5lbs2ga0wn-bpOayVEm4x--4N64YfCRIik/edit?usp=sharing'\n","\n","wb = gc.open_by_url(train_csv)\n","df = pd.DataFrame( wb.worksheet('train').get_all_values())\n","df.columns = df.iloc[0]\n","df_train = df[1:]\n","\n","test_csv = 'https://docs.google.com/spreadsheets/d/1-ZaJvXq7XlNPxtSOwhm5tHEhPmBHIZK-VuGilk_rk0A/edit?usp=sharing'\n","wb = gc.open_by_url(test_csv)\n","df = pd.DataFrame( wb.worksheet('test').get_all_values())\n","df.columns = df.iloc[0]\n","df_test = df[1:]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"zvisdMCJk8Mj","colab":{"base_uri":"https://localhost:8080/","height":527},"executionInfo":{"status":"ok","timestamp":1593138092311,"user_tz":-480,"elapsed":69503,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"a6456c9f-ae8c-4578-bf97-2567e546580e"},"source":["print( f'train {df_train.shape}' )\n","display( df_train.head() )\n","\n","print( f'\\ntest {df_test.shape}' )\n","display( df_test.head() )"],"execution_count":null,"outputs":[{"output_type":"stream","text":["train (891, 12)\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.25</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.925</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.05</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["0 PassengerId Survived Pclass  ...     Fare Cabin Embarked\n","1           1        0      3  ...     7.25              S\n","2           2        1      1  ...  71.2833   C85        C\n","3           3        1      3  ...    7.925              S\n","4           4        1      1  ...     53.1  C123        S\n","5           5        0      3  ...     8.05              S\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]}},{"output_type":"stream","text":["\n","test (418, 11)\n"],"name":"stdout"},{"output_type":"display_data","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1</th>\n","      <td>892</td>\n","      <td>3</td>\n","      <td>Kelly, Mr. James</td>\n","      <td>male</td>\n","      <td>34.5</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>330911</td>\n","      <td>7.8292</td>\n","      <td></td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>893</td>\n","      <td>3</td>\n","      <td>Wilkes, Mrs. James (Ellen Needs)</td>\n","      <td>female</td>\n","      <td>47</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>363272</td>\n","      <td>7</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>894</td>\n","      <td>2</td>\n","      <td>Myles, Mr. Thomas Francis</td>\n","      <td>male</td>\n","      <td>62</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>240276</td>\n","      <td>9.6875</td>\n","      <td></td>\n","      <td>Q</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>895</td>\n","      <td>3</td>\n","      <td>Wirz, Mr. Albert</td>\n","      <td>male</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>315154</td>\n","      <td>8.6625</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>896</td>\n","      <td>3</td>\n","      <td>Hirvonen, Mrs. Alexander (Helga E Lindqvist)</td>\n","      <td>female</td>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["0 PassengerId Pclass  ... Cabin Embarked\n","1         892      3  ...              Q\n","2         893      3  ...              S\n","3         894      2  ...              Q\n","4         895      3  ...              S\n","5         896      3  ...              S\n","\n","[5 rows x 11 columns]"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"otNIFLT8n19d","colab":{"base_uri":"https://localhost:8080/","height":340},"executionInfo":{"status":"ok","timestamp":1593138092312,"user_tz":-480,"elapsed":69480,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"839e88b0-9206-4251-b196-9a5ec0a1ede9"},"source":["#@title Check date\n","df_train.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 891 entries, 1 to 891\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype \n","---  ------       --------------  ----- \n"," 0   PassengerId  891 non-null    object\n"," 1   Survived     891 non-null    object\n"," 2   Pclass       891 non-null    object\n"," 3   Name         891 non-null    object\n"," 4   Sex          891 non-null    object\n"," 5   Age          891 non-null    object\n"," 6   SibSp        891 non-null    object\n"," 7   Parch        891 non-null    object\n"," 8   Ticket       891 non-null    object\n"," 9   Fare         891 non-null    object\n"," 10  Cabin        891 non-null    object\n"," 11  Embarked     891 non-null    object\n","dtypes: object(12)\n","memory usage: 83.7+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"yXZwV30GFvVZ","colab":{"base_uri":"https://localhost:8080/","height":173},"executionInfo":{"status":"ok","timestamp":1593138092312,"user_tz":-480,"elapsed":69453,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"6db9bb32-e78c-418f-e611-1ff2c1f6fc9e"},"source":["#@title Check data type\n","df_train.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","      <td>891</td>\n","    </tr>\n","    <tr>\n","      <th>unique</th>\n","      <td>891</td>\n","      <td>2</td>\n","      <td>3</td>\n","      <td>891</td>\n","      <td>2</td>\n","      <td>89</td>\n","      <td>7</td>\n","      <td>7</td>\n","      <td>681</td>\n","      <td>248</td>\n","      <td>148</td>\n","      <td>4</td>\n","    </tr>\n","    <tr>\n","      <th>top</th>\n","      <td>147</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Ford, Mr. William Neal</td>\n","      <td>male</td>\n","      <td></td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>1601</td>\n","      <td>8.05</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>freq</th>\n","      <td>1</td>\n","      <td>549</td>\n","      <td>491</td>\n","      <td>1</td>\n","      <td>577</td>\n","      <td>177</td>\n","      <td>608</td>\n","      <td>678</td>\n","      <td>7</td>\n","      <td>43</td>\n","      <td>687</td>\n","      <td>644</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["0      PassengerId Survived Pclass  ...  Fare Cabin Embarked\n","count          891      891    891  ...   891   891      891\n","unique         891        2      3  ...   248   148        4\n","top            147        0      3  ...  8.05              S\n","freq             1      549    491  ...    43   687      644\n","\n","[4 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":6}]},{"cell_type":"code","metadata":{"id":"GXDdeIRpcHGB","colab":{"base_uri":"https://localhost:8080/","height":255},"executionInfo":{"status":"ok","timestamp":1593138092313,"user_tz":-480,"elapsed":69403,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"34d2e6ba-372a-42f3-9069-9f2772d6a427"},"source":["#@title Combine train & test data\n","df = df_train.append( df_test ).reset_index(drop=True)\n","df.sample(5)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>1169</th>\n","      <td>1170</td>\n","      <td>NaN</td>\n","      <td>2</td>\n","      <td>Ware, Mr. John James</td>\n","      <td>male</td>\n","      <td>30</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>CA 31352</td>\n","      <td>21</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>479</th>\n","      <td>480</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Hirvonen, Miss. Hildur E</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>3101298</td>\n","      <td>12.2875</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1175</th>\n","      <td>1176</td>\n","      <td>NaN</td>\n","      <td>3</td>\n","      <td>Rosblom, Miss. Salli Helena</td>\n","      <td>female</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>370129</td>\n","      <td>20.2125</td>\n","      <td></td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>377</th>\n","      <td>378</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Widener, Mr. Harry Elkins</td>\n","      <td>male</td>\n","      <td>27</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>113503</td>\n","      <td>211.5</td>\n","      <td>C82</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>659</th>\n","      <td>660</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>Newell, Mr. Arthur Webster</td>\n","      <td>male</td>\n","      <td>58</td>\n","      <td>0</td>\n","      <td>2</td>\n","      <td>35273</td>\n","      <td>113.275</td>\n","      <td>D48</td>\n","      <td>C</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["     PassengerId Survived Pclass  ...     Fare Cabin Embarked\n","1169        1170      NaN      2  ...       21              S\n","479          480        1      3  ...  12.2875              S\n","1175        1176      NaN      3  ...  20.2125              S\n","377          378        0      1  ...    211.5   C82        C\n","659          660        0      1  ...  113.275   D48        C\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":7}]},{"cell_type":"code","metadata":{"id":"sv337p3pKEEy","colab":{"base_uri":"https://localhost:8080/","height":289},"executionInfo":{"status":"ok","timestamp":1593138092707,"user_tz":-480,"elapsed":69760,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"ef4e0f83-29ec-4f1b-c841-ad602e788357"},"source":["#@title Replace blank with NaN value\n","import numpy as np\n","\n","df.replace('', np.nan, inplace=True)\n","\n","print(df.shape)\n","df.head()\n"],"execution_count":null,"outputs":[{"output_type":"stream","text":["(1309, 12)\n"],"name":"stdout"},{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>male</td>\n","      <td>22</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.25</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>female</td>\n","      <td>38</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>C85</td>\n","      <td>C</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1</td>\n","      <td>3</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>female</td>\n","      <td>26</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.925</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1</td>\n","      <td>1</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>female</td>\n","      <td>35</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1</td>\n","      <td>C123</td>\n","      <td>S</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0</td>\n","      <td>3</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>male</td>\n","      <td>35</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.05</td>\n","      <td>NaN</td>\n","      <td>S</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  PassengerId Survived Pclass  ...     Fare Cabin Embarked\n","0           1        0      3  ...     7.25   NaN        S\n","1           2        1      1  ...  71.2833   C85        C\n","2           3        1      3  ...    7.925   NaN        S\n","3           4        1      1  ...     53.1  C123        S\n","4           5        0      3  ...     8.05   NaN        S\n","\n","[5 rows x 12 columns]"]},"metadata":{"tags":[]},"execution_count":8}]},{"cell_type":"code","metadata":{"id":"bWk4rUrVZmD7","colab":{"base_uri":"https://localhost:8080/","height":340},"executionInfo":{"status":"ok","timestamp":1593138092708,"user_tz":-480,"elapsed":69721,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"017152c7-884f-4566-f6cd-d697a755b55a"},"source":["#@title Convert object columns to numeric\n","df = df.apply(pd.to_numeric, errors='ignore')\n","df.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1309 entries, 0 to 1308\n","Data columns (total 12 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  1309 non-null   int64  \n"," 1   Survived     891 non-null    float64\n"," 2   Pclass       1309 non-null   int64  \n"," 3   Name         1309 non-null   object \n"," 4   Sex          1309 non-null   object \n"," 5   Age          1046 non-null   float64\n"," 6   SibSp        1309 non-null   int64  \n"," 7   Parch        1309 non-null   int64  \n"," 8   Ticket       1309 non-null   object \n"," 9   Fare         1308 non-null   float64\n"," 10  Cabin        295 non-null    object \n"," 11  Embarked     1307 non-null   object \n","dtypes: float64(3), int64(4), object(5)\n","memory usage: 122.8+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"RFnqp-BcKoLU","colab":{"base_uri":"https://localhost:8080/","height":297},"executionInfo":{"status":"ok","timestamp":1593138092709,"user_tz":-480,"elapsed":69685,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"d9c6cc94-1c65-4434-8304-5029ab3243c5"},"source":["#@title Check data distribution\n","df.describe()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Fare</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>count</th>\n","      <td>1309.000000</td>\n","      <td>891.000000</td>\n","      <td>1309.000000</td>\n","      <td>1046.000000</td>\n","      <td>1309.000000</td>\n","      <td>1309.000000</td>\n","      <td>1308.000000</td>\n","    </tr>\n","    <tr>\n","      <th>mean</th>\n","      <td>655.000000</td>\n","      <td>0.383838</td>\n","      <td>2.294882</td>\n","      <td>29.881138</td>\n","      <td>0.498854</td>\n","      <td>0.385027</td>\n","      <td>33.295479</td>\n","    </tr>\n","    <tr>\n","      <th>std</th>\n","      <td>378.020061</td>\n","      <td>0.486592</td>\n","      <td>0.837836</td>\n","      <td>14.413493</td>\n","      <td>1.041658</td>\n","      <td>0.865560</td>\n","      <td>51.758668</td>\n","    </tr>\n","    <tr>\n","      <th>min</th>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>1.000000</td>\n","      <td>0.170000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","    </tr>\n","    <tr>\n","      <th>25%</th>\n","      <td>328.000000</td>\n","      <td>0.000000</td>\n","      <td>2.000000</td>\n","      <td>21.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>7.895800</td>\n","    </tr>\n","    <tr>\n","      <th>50%</th>\n","      <td>655.000000</td>\n","      <td>0.000000</td>\n","      <td>3.000000</td>\n","      <td>28.000000</td>\n","      <td>0.000000</td>\n","      <td>0.000000</td>\n","      <td>14.454200</td>\n","    </tr>\n","    <tr>\n","      <th>75%</th>\n","      <td>982.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>39.000000</td>\n","      <td>1.000000</td>\n","      <td>0.000000</td>\n","      <td>31.275000</td>\n","    </tr>\n","    <tr>\n","      <th>max</th>\n","      <td>1309.000000</td>\n","      <td>1.000000</td>\n","      <td>3.000000</td>\n","      <td>80.000000</td>\n","      <td>8.000000</td>\n","      <td>9.000000</td>\n","      <td>512.329200</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["       PassengerId    Survived  ...        Parch         Fare\n","count  1309.000000  891.000000  ...  1309.000000  1308.000000\n","mean    655.000000    0.383838  ...     0.385027    33.295479\n","std     378.020061    0.486592  ...     0.865560    51.758668\n","min       1.000000    0.000000  ...     0.000000     0.000000\n","25%     328.000000    0.000000  ...     0.000000     7.895800\n","50%     655.000000    0.000000  ...     0.000000    14.454200\n","75%     982.000000    1.000000  ...     0.000000    31.275000\n","max    1309.000000    1.000000  ...     9.000000   512.329200\n","\n","[8 rows x 7 columns]"]},"metadata":{"tags":[]},"execution_count":10}]},{"cell_type":"code","metadata":{"id":"zzlzU_WRG5wz","colab":{"base_uri":"https://localhost:8080/","height":204},"executionInfo":{"status":"ok","timestamp":1593138092710,"user_tz":-480,"elapsed":69660,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"f7c6135e-fdaf-4ecf-a4a1-0fcf532c064c"},"source":["#@title How bad is missing value\n","def Missing_Counts( Data ) : \n","    missing = Data.isnull().sum()  # Calculate No. of missing Value\n","    missing = missing[ missing>0 ]\n","    missing.sort_values( inplace=True ) \n","    \n","    Missing_Count = pd.DataFrame( { 'ColumnName':missing.index, 'MissingCount':missing.values } )  # Convert Series to DataFrame\n","    Missing_Count[ 'Percentage(%)' ] = Missing_Count['MissingCount'].apply( lambda x:round(x/Data.shape[0]*100,2) )\n","    return  Missing_Count\n","\n","Missing_Counts(df) "],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>ColumnName</th>\n","      <th>MissingCount</th>\n","      <th>Percentage(%)</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>Fare</td>\n","      <td>1</td>\n","      <td>0.08</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Embarked</td>\n","      <td>2</td>\n","      <td>0.15</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Age</td>\n","      <td>263</td>\n","      <td>20.09</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Survived</td>\n","      <td>418</td>\n","      <td>31.93</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Cabin</td>\n","      <td>1014</td>\n","      <td>77.46</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["  ColumnName  MissingCount  Percentage(%)\n","0       Fare             1           0.08\n","1   Embarked             2           0.15\n","2        Age           263          20.09\n","3   Survived           418          31.93\n","4      Cabin          1014          77.46"]},"metadata":{"tags":[]},"execution_count":11}]},{"cell_type":"code","metadata":{"id":"BMFMxs-fezOR","colab":{"base_uri":"https://localhost:8080/","height":266},"executionInfo":{"status":"ok","timestamp":1593138092710,"user_tz":-480,"elapsed":69622,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"8bd360f6-5a31-49b3-f279-1bac6c9f250b"},"source":["#@title Survival Correlations \n","df_train = df_train.apply(pd.to_numeric, errors='ignore')\n","Corr_Matrix = df_train.corr() \n","\n","Corr = Corr_Matrix.loc['Survived',:].sort_values()[:-1]\n","Corr = pd.DataFrame({ 'Survived':Corr })\n","Corr"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Survived</th>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <th></th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>Pclass</th>\n","      <td>-0.338481</td>\n","    </tr>\n","    <tr>\n","      <th>Age</th>\n","      <td>-0.077221</td>\n","    </tr>\n","    <tr>\n","      <th>SibSp</th>\n","      <td>-0.035322</td>\n","    </tr>\n","    <tr>\n","      <th>PassengerId</th>\n","      <td>-0.005007</td>\n","    </tr>\n","    <tr>\n","      <th>Parch</th>\n","      <td>0.081629</td>\n","    </tr>\n","    <tr>\n","      <th>Fare</th>\n","      <td>0.257307</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["             Survived\n","0                    \n","Pclass      -0.338481\n","Age         -0.077221\n","SibSp       -0.035322\n","PassengerId -0.005007\n","Parch        0.081629\n","Fare         0.257307"]},"metadata":{"tags":[]},"execution_count":12}]},{"cell_type":"code","metadata":{"id":"LYEs3elUMk28","colab":{"base_uri":"https://localhost:8080/","height":265},"executionInfo":{"status":"ok","timestamp":1593138092711,"user_tz":-480,"elapsed":69604,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"af54c7eb-d10d-4c75-afec-102ab338ad10"},"source":["#@title Survival Rate\n","df['Survived'].value_counts().plot( kind='pie', colors=['lightcoral','skyblue'], autopct='%1.2f%%' )"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe4a2350668>"]},"metadata":{"tags":[]},"execution_count":13},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"OS7csfOjNWbc","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1593138093039,"user_tz":-480,"elapsed":69915,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"1e558333-f998-45a4-b40f-09f38c0ba5a2"},"source":["#@title Find correlations - Pclass\n","sns.countplot(df['Pclass'], hue=df['Survived'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe4a22e3a90>"]},"metadata":{"tags":[]},"execution_count":14},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"e_tSxomRPmV5","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1593138093042,"user_tz":-480,"elapsed":69902,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"4f952683-e24e-4a4a-b8fc-03d5325a63fb"},"source":["#@title Find correlations - Sex\n","sns.countplot(df['Sex'], hue=df['Survived'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe4a1dc4cc0>"]},"metadata":{"tags":[]},"execution_count":15},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"hzs7FK67Pzyy","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1593138093539,"user_tz":-480,"elapsed":70380,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"24ded51b-a351-4cb0-ad13-33a809efb5e1"},"source":["#@title Find correlations - Embarked\n","sns.countplot(df['Embarked'], hue=df['Survived'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe4a1d93d30>"]},"metadata":{"tags":[]},"execution_count":16},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"rqitfXFGQHwQ","colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"status":"ok","timestamp":1593138093938,"user_tz":-480,"elapsed":70763,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"8cd6d5ce-1dc3-4876-b9e0-4ceb39240d89"},"source":["#@title Find correlations - Age\n","g = sns.FacetGrid(df, col='Survived')\n","g.map(sns.distplot, 'Age', kde=False)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fe4a238cc88>"]},"metadata":{"tags":[]},"execution_count":17},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x216 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"Ij9goiGoQR_p","colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"status":"ok","timestamp":1593138094236,"user_tz":-480,"elapsed":71042,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"78e5c026-f48f-49dd-ceb6-44e7e16d5e70"},"source":["#@title Find correlations - Fare\n","g = sns.FacetGrid(df, col='Survived')\n","g.map(sns.distplot, 'Fare', kde=False)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fe4a238c7f0>"]},"metadata":{"tags":[]},"execution_count":18},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x216 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"ojhE1YSQQmag","colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"status":"ok","timestamp":1593138094915,"user_tz":-480,"elapsed":71703,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"5579cfbb-8684-4a03-d92a-22427f6c03cf"},"source":["#@title Find correlations - Parch\n","g = sns.FacetGrid(df, col='Survived')\n","g.map(sns.distplot, 'Parch', kde=False)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fe49f1f00f0>"]},"metadata":{"tags":[]},"execution_count":19},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x216 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"Oi3SB_0DQu9g","colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"status":"ok","timestamp":1593138095212,"user_tz":-480,"elapsed":71982,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"7d38f707-5681-4929-d5a7-de11d0e0b4e5"},"source":["#@title Find correlations - SibSp\n","g = sns.FacetGrid(df, col='Survived')\n","g.map(sns.distplot, 'SibSp', kde=False)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fe49f287d30>"]},"metadata":{"tags":[]},"execution_count":20},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x216 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"MGXy7cRjQ4pF","colab":{"base_uri":"https://localhost:8080/","height":242},"executionInfo":{"status":"ok","timestamp":1593138095994,"user_tz":-480,"elapsed":72745,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"a608a580-7e65-4389-8388-a730a75c62dc"},"source":["#@title Find correlations - SibSp + Parch\n","df['Family_Size'] = df['Parch'] + df['SibSp']\n","g = sns.FacetGrid(df, col='Survived')\n","g.map(sns.distplot, 'Family_Size', kde=False)"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<seaborn.axisgrid.FacetGrid at 0x7fe4a23bc668>"]},"metadata":{"tags":[]},"execution_count":21},{"output_type":"display_data","data":{"image/png":"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ICKiLqPVUBoyZAj279/f5GOrV69utE+hUGDevHkdr4yIiGwO7+hARETSYCgREZE0GEpERCQNhhIREUmDoURERNJgKBERkTQYSkREJA2GEhERSaNddwknIvlUfn8AhmduWNwUu5DJFqqGqGN4pkRERNJgKBERkTQYSkREJA2GEhERSYOhRERE0mAoERGRNBhKREQkDYYSERFJg6FERETSYCgREZE0GEpERCQNhhIREUmDoURERNJgKBERkTQYSkREJA2GEhERSYOhRERE0mAoERGRNBhKREQkDYfWBmzZsgXZ2dlQq9VISEgAAOj1eiQmJuLBgwfw9PTE0qVLoVKpIITAzp07cebMGTg5OSE2NhY+Pj5mfxFERNQ1tHqmFBYWhhUrVjTYd+DAAYwYMQLJyckYMWIEDhw4AAA4c+YM7t69i+TkZMyfPx/btm0zT9VERNQltRpKw4YNg0qlarBPq9UiNDQUABAaGgqtVgsAOHXqFEJCQqBQKODr64uKigqUlpaaoWwiIuqKWl2+a0pZWRnc3NwAAK6urigrKwMA6HQ6eHh4GMe5u7tDp9MZxz4rPT0d6enpAID4+PgGz3tetZ19g2BUtjDWXBwcHFqs0ZbqYA3mraE9vQE07o+mmLtnuvJ/D9Zg2RpeKJSepVAooFAo2v288PBwhIeHG7eLi4ubHas01EOv1xu3K1sYay4eHh4t1mhLdbCGttXg5eX1QsdtT28AjfujKebumc7w34M1yFNDS73xQlffqdVq47JcaWkpXFxcAAAajaZBISUlJdBoNC8yBRER2aAXCqXAwEBkZmYCADIzMzFmzBjj/qysLAghkJeXB6VS2eTSHRERUVNaXb5LSkrChQsXUF5ejpiYGMycORMzZsxAYmIiMjIyjJeEA4C/vz+ys7OxZMkSODo6IjY21uwvgIhaZ8j6rtUxdiGTLVAJUctaDaW4uLgm969evbrRPoVCgXnz5nW8KiIiskm8owMREUmDoURERNJgKBERkTQYSkREJI0O//FsZ9DUlUe80oiISD48UyIiImkwlIiISBoMJSIikgZDiYiIpGETFzoQkWk0d7uiSpUKhv+/UzkvIqKO4JkSERFJg6FERETSYCgREZE0GEpERCQNhhIREUmDV9+1UeX3B4xXFwG8woiIyBx4pkRERNJgKBERkTQYSkREJA2GEhERSYOhRERE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\n","text/plain":["<Figure size 432x216 with 2 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"HQTwSGIdSRiz"},"source":["## 2.Feature Engineering\n","- Convert Categorical data to numeric\n","- Normalization: default: z-score. minmax,maxabs,robust is optional\n","- Outlier treatment: Linear dimensionality reduction"]},{"cell_type":"code","metadata":{"id":"je6Q5NIeRqPX","colab":{"base_uri":"https://localhost:8080/","height":419},"executionInfo":{"status":"ok","timestamp":1593138096000,"user_tz":-480,"elapsed":72724,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"f049792d-640c-4591-de4a-55a24e7040cb"},"source":["#@title Name\n","df.Name.reset_index()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>index</th>\n","      <th>Name</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>0</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>1</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>2</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>3</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>4</td>\n","      <td>Allen, Mr. William Henry</td>\n","    </tr>\n","    <tr>\n","      <th>...</th>\n","      <td>...</td>\n","      <td>...</td>\n","    </tr>\n","    <tr>\n","      <th>1304</th>\n","      <td>1304</td>\n","      <td>Spector, Mr. Woolf</td>\n","    </tr>\n","    <tr>\n","      <th>1305</th>\n","      <td>1305</td>\n","      <td>Oliva y Ocana, Dona. Fermina</td>\n","    </tr>\n","    <tr>\n","      <th>1306</th>\n","      <td>1306</td>\n","      <td>Saether, Mr. Simon Sivertsen</td>\n","    </tr>\n","    <tr>\n","      <th>1307</th>\n","      <td>1307</td>\n","      <td>Ware, Mr. Frederick</td>\n","    </tr>\n","    <tr>\n","      <th>1308</th>\n","      <td>1308</td>\n","      <td>Peter, Master. Michael J</td>\n","    </tr>\n","  </tbody>\n","</table>\n","<p>1309 rows × 2 columns</p>\n","</div>"],"text/plain":["      index                                               Name\n","0         0                            Braund, Mr. Owen Harris\n","1         1  Cumings, Mrs. John Bradley (Florence Briggs Th...\n","2         2                             Heikkinen, Miss. Laina\n","3         3       Futrelle, Mrs. Jacques Heath (Lily May Peel)\n","4         4                           Allen, Mr. William Henry\n","...     ...                                                ...\n","1304   1304                                 Spector, Mr. Woolf\n","1305   1305                       Oliva y Ocana, Dona. Fermina\n","1306   1306                       Saether, Mr. Simon Sivertsen\n","1307   1307                                Ware, Mr. Frederick\n","1308   1308                           Peter, Master. Michael J\n","\n","[1309 rows x 2 columns]"]},"metadata":{"tags":[]},"execution_count":22}]},{"cell_type":"code","metadata":{"id":"a7FAXAIYROPt","colab":{"base_uri":"https://localhost:8080/","height":340},"executionInfo":{"status":"ok","timestamp":1593138096003,"user_tz":-480,"elapsed":72699,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"e0d6a5e0-f542-46b9-dec0-b3c840d44e04"},"source":["#@title Find Title\n","df['Title1'] = df['Name'].str.split(\", \", expand=True)[1]\n","df['Name'].str.split(\", \", expand=True).head()\n","df['Title1'] = df['Title1'].str.split(\".\", expand=True)[0]\n","df.Title1.value_counts()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["Mr              757\n","Miss            260\n","Mrs             197\n","Master           61\n","Dr                8\n","Rev               8\n","Col               4\n","Major             2\n","Mlle              2\n","Ms                2\n","Sir               1\n","Capt              1\n","Lady              1\n","the Countess      1\n","Mme               1\n","Jonkheer          1\n","Dona              1\n","Don               1\n","Name: Title1, dtype: int64"]},"metadata":{"tags":[]},"execution_count":23}]},{"cell_type":"code","metadata":{"id":"GLbCH-eRSDgm","colab":{"base_uri":"https://localhost:8080/","height":103},"executionInfo":{"status":"ok","timestamp":1593138096016,"user_tz":-480,"elapsed":72672,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"73f70943-a757-46ae-a59f-d76e72583a54"},"source":["#@title Find Title vs sex\n","pd.crosstab(df['Title1'],df['Sex']).T.style.background_gradient(cmap='summer_r')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<style  type=\"text/css\" >\n","    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col0 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col1 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col2 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col3 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col4 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col5 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col6 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col7 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col8 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col9 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col10 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col11 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col12 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col13 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col14 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col15 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col16 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col17 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col0 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col1 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col2 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col3 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col4 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col5 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col6 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col7 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col8 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col9 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col10 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col11 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col12 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col13 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col14 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col15 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col16 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col17 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }</style><table id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002\" ><thead>    <tr>        <th class=\"index_name level0\" >Title1</th>        <th class=\"col_heading level0 col0\" >Capt</th>        <th class=\"col_heading level0 col1\" >Col</th>        <th class=\"col_heading level0 col2\" >Don</th>        <th class=\"col_heading level0 col3\" >Dona</th>        <th class=\"col_heading level0 col4\" >Dr</th>        <th class=\"col_heading level0 col5\" >Jonkheer</th>        <th class=\"col_heading level0 col6\" >Lady</th>        <th class=\"col_heading level0 col7\" >Major</th>        <th class=\"col_heading level0 col8\" >Master</th>        <th class=\"col_heading level0 col9\" >Miss</th>        <th class=\"col_heading level0 col10\" >Mlle</th>        <th class=\"col_heading level0 col11\" >Mme</th>        <th class=\"col_heading level0 col12\" >Mr</th>        <th class=\"col_heading level0 col13\" >Mrs</th>        <th class=\"col_heading level0 col14\" >Ms</th>        <th class=\"col_heading level0 col15\" >Rev</th>        <th class=\"col_heading level0 col16\" >Sir</th>        <th class=\"col_heading level0 col17\" >the Countess</th>    </tr>    <tr>        <th class=\"index_name level0\" >Sex</th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>    </tr></thead><tbody>\n","                <tr>\n","                        <th id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" >female</th>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col0\" class=\"data row0 col0\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col1\" class=\"data row0 col1\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col2\" class=\"data row0 col2\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col3\" class=\"data row0 col3\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col4\" class=\"data row0 col4\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col5\" class=\"data row0 col5\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col6\" class=\"data row0 col6\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col7\" class=\"data row0 col7\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col8\" class=\"data row0 col8\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col9\" class=\"data row0 col9\" >260</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col10\" class=\"data row0 col10\" >2</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col11\" class=\"data row0 col11\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col12\" class=\"data row0 col12\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col13\" class=\"data row0 col13\" >197</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col14\" class=\"data row0 col14\" >2</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col15\" class=\"data row0 col15\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col16\" class=\"data row0 col16\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row0_col17\" class=\"data row0 col17\" >1</td>\n","            </tr>\n","            <tr>\n","                        <th id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002level0_row1\" class=\"row_heading level0 row1\" >male</th>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col0\" class=\"data row1 col0\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col1\" class=\"data row1 col1\" >4</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col2\" class=\"data row1 col2\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col3\" class=\"data row1 col3\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col4\" class=\"data row1 col4\" >7</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col5\" class=\"data row1 col5\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col6\" class=\"data row1 col6\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col7\" class=\"data row1 col7\" >2</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col8\" class=\"data row1 col8\" >61</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col9\" class=\"data row1 col9\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col10\" class=\"data row1 col10\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col11\" class=\"data row1 col11\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col12\" class=\"data row1 col12\" >757</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col13\" class=\"data row1 col13\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col14\" class=\"data row1 col14\" >0</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col15\" class=\"data row1 col15\" >8</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col16\" class=\"data row1 col16\" >1</td>\n","                        <td id=\"T_c2264134_b753_11ea_ae50_0242ac1c0002row1_col17\" class=\"data row1 col17\" >0</td>\n","            </tr>\n","    </tbody></table>"],"text/plain":["<pandas.io.formats.style.Styler at 0x7fe4a238c630>"]},"metadata":{"tags":[]},"execution_count":24}]},{"cell_type":"code","metadata":{"id":"zQKxSEBjTj7r","colab":{"base_uri":"https://localhost:8080/","height":103},"executionInfo":{"status":"ok","timestamp":1593138096017,"user_tz":-480,"elapsed":72603,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"87db0050-7099-4bfd-888d-b704bdf9bd15"},"source":["#@title Find Title vs Survived\n","pd.crosstab(df['Title1'],df['Survived']).T.style.background_gradient(cmap='summer_r')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<style  type=\"text/css\" >\n","    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col0 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col1 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col2 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col3 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col4 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col5 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col6 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col7 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col8 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col9 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col10 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col11 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col12 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col13 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col14 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col15 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col16 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col0 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col1 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col2 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col3 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col4 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col5 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col6 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col7 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col8 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col9 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col10 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col11 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col12 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col13 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col14 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col15 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col16 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }</style><table id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002\" ><thead>    <tr>        <th class=\"index_name level0\" >Title1</th>        <th class=\"col_heading level0 col0\" >Capt</th>        <th class=\"col_heading level0 col1\" >Col</th>        <th class=\"col_heading level0 col2\" >Don</th>        <th class=\"col_heading level0 col3\" >Dr</th>        <th class=\"col_heading level0 col4\" >Jonkheer</th>        <th class=\"col_heading level0 col5\" >Lady</th>        <th class=\"col_heading level0 col6\" >Major</th>        <th class=\"col_heading level0 col7\" >Master</th>        <th class=\"col_heading level0 col8\" >Miss</th>        <th class=\"col_heading level0 col9\" >Mlle</th>        <th class=\"col_heading level0 col10\" >Mme</th>        <th class=\"col_heading level0 col11\" >Mr</th>        <th class=\"col_heading level0 col12\" >Mrs</th>        <th class=\"col_heading level0 col13\" >Ms</th>        <th class=\"col_heading level0 col14\" >Rev</th>        <th class=\"col_heading level0 col15\" >Sir</th>        <th class=\"col_heading level0 col16\" >the Countess</th>    </tr>    <tr>        <th class=\"index_name level0\" >Survived</th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>    </tr></thead><tbody>\n","                <tr>\n","                        <th id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" >0.0</th>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col0\" class=\"data row0 col0\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col1\" class=\"data row0 col1\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col2\" class=\"data row0 col2\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col3\" class=\"data row0 col3\" >4</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col4\" class=\"data row0 col4\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col5\" class=\"data row0 col5\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col6\" class=\"data row0 col6\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col7\" class=\"data row0 col7\" >17</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col8\" class=\"data row0 col8\" >55</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col9\" class=\"data row0 col9\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col10\" class=\"data row0 col10\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col11\" class=\"data row0 col11\" >436</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col12\" class=\"data row0 col12\" >26</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col13\" class=\"data row0 col13\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col14\" class=\"data row0 col14\" >6</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col15\" class=\"data row0 col15\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row0_col16\" class=\"data row0 col16\" >0</td>\n","            </tr>\n","            <tr>\n","                        <th id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002level0_row1\" class=\"row_heading level0 row1\" >1.0</th>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col0\" class=\"data row1 col0\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col1\" class=\"data row1 col1\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col2\" class=\"data row1 col2\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col3\" class=\"data row1 col3\" >3</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col4\" class=\"data row1 col4\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col5\" class=\"data row1 col5\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col6\" class=\"data row1 col6\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col7\" class=\"data row1 col7\" >23</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col8\" class=\"data row1 col8\" >127</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col9\" class=\"data row1 col9\" >2</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col10\" class=\"data row1 col10\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col11\" class=\"data row1 col11\" >81</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col12\" class=\"data row1 col12\" >99</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col13\" class=\"data row1 col13\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col14\" class=\"data row1 col14\" >0</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col15\" class=\"data row1 col15\" >1</td>\n","                        <td id=\"T_c22ea4d2_b753_11ea_ae50_0242ac1c0002row1_col16\" class=\"data row1 col16\" >1</td>\n","            </tr>\n","    </tbody></table>"],"text/plain":["<pandas.io.formats.style.Styler at 0x7fe49dc39278>"]},"metadata":{"tags":[]},"execution_count":25}]},{"cell_type":"code","metadata":{"id":"OwvcwMhBUEuF","colab":{"base_uri":"https://localhost:8080/","height":607},"executionInfo":{"status":"ok","timestamp":1593138096018,"user_tz":-480,"elapsed":72584,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"20900840-058b-4483-9b97-664cd26e476c"},"source":["#@title Find Title vs Age\n","df.groupby(['Title1'])['Age'].mean().reset_index().sort_values(by = 'Age')"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>Title1</th>\n","      <th>Age</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>8</th>\n","      <td>Master</td>\n","      <td>5.482642</td>\n","    </tr>\n","    <tr>\n","      <th>9</th>\n","      <td>Miss</td>\n","      <td>21.774238</td>\n","    </tr>\n","    <tr>\n","      <th>11</th>\n","      <td>Mme</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>10</th>\n","      <td>Mlle</td>\n","      <td>24.000000</td>\n","    </tr>\n","    <tr>\n","      <th>14</th>\n","      <td>Ms</td>\n","      <td>28.000000</td>\n","    </tr>\n","    <tr>\n","      <th>12</th>\n","      <td>Mr</td>\n","      <td>32.252151</td>\n","    </tr>\n","    <tr>\n","      <th>17</th>\n","      <td>the Countess</td>\n","      <td>33.000000</td>\n","    </tr>\n","    <tr>\n","      <th>13</th>\n","      <td>Mrs</td>\n","      <td>36.994118</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Jonkheer</td>\n","      <td>38.000000</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Dona</td>\n","      <td>39.000000</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Don</td>\n","      <td>40.000000</td>\n","    </tr>\n","    <tr>\n","      <th>15</th>\n","      <td>Rev</td>\n","      <td>41.250000</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>Dr</td>\n","      <td>43.571429</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Lady</td>\n","      <td>48.000000</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Major</td>\n","      <td>48.500000</td>\n","    </tr>\n","    <tr>\n","      <th>16</th>\n","      <td>Sir</td>\n","      <td>49.000000</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Col</td>\n","      <td>54.000000</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Capt</td>\n","      <td>70.000000</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["          Title1        Age\n","8         Master   5.482642\n","9           Miss  21.774238\n","11           Mme  24.000000\n","10          Mlle  24.000000\n","14            Ms  28.000000\n","12            Mr  32.252151\n","17  the Countess  33.000000\n","13           Mrs  36.994118\n","5       Jonkheer  38.000000\n","3           Dona  39.000000\n","2            Don  40.000000\n","15           Rev  41.250000\n","4             Dr  43.571429\n","6           Lady  48.000000\n","7          Major  48.500000\n","16           Sir  49.000000\n","1            Col  54.000000\n","0           Capt  70.000000"]},"metadata":{"tags":[]},"execution_count":26}]},{"cell_type":"code","metadata":{"id":"TMtU65sOW_gq"},"source":["#@title Reclass title\n","df['Title2'] = df['Title1'].replace(['Mlle','Mme','Ms','Dr','Major','Lady','the Countess','Jonkheer','Col','Rev','Capt','Sir','Don','Dona'],\n","         ['Miss','Mrs','Miss','Mr','Mr','Mrs','Mrs','Mr','Mr','Mr','Mr','Mr','Mr','Mrs'])"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"9aiOeYQTXWTW","colab":{"base_uri":"https://localhost:8080/","height":103},"executionInfo":{"status":"ok","timestamp":1593138096019,"user_tz":-480,"elapsed":72545,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"4107e018-1d65-4159-e5e4-0ccd25ed54e4"},"source":["#@title New title vs Survival\n","pd.crosstab(df['Title2'], df['Survived']).T.style.background_gradient(cmap='summer_r') #Checking the Initials with the Sex"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<style  type=\"text/css\" >\n","    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col0 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col1 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col2 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col3 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col0 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col1 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col2 {\n","            background-color:  #ffff66;\n","            color:  #000000;\n","        }    #T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col3 {\n","            background-color:  #008066;\n","            color:  #f1f1f1;\n","        }</style><table id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002\" ><thead>    <tr>        <th class=\"index_name level0\" >Title2</th>        <th class=\"col_heading level0 col0\" >Master</th>        <th class=\"col_heading level0 col1\" >Miss</th>        <th class=\"col_heading level0 col2\" >Mr</th>        <th class=\"col_heading level0 col3\" >Mrs</th>    </tr>    <tr>        <th class=\"index_name level0\" >Survived</th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>        <th class=\"blank\" ></th>    </tr></thead><tbody>\n","                <tr>\n","                        <th id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002level0_row0\" class=\"row_heading level0 row0\" >0.0</th>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col0\" class=\"data row0 col0\" >17</td>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col1\" class=\"data row0 col1\" >55</td>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col2\" class=\"data row0 col2\" >451</td>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row0_col3\" class=\"data row0 col3\" >26</td>\n","            </tr>\n","            <tr>\n","                        <th id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002level0_row1\" class=\"row_heading level0 row1\" >1.0</th>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col0\" class=\"data row1 col0\" >23</td>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col1\" class=\"data row1 col1\" >130</td>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col2\" class=\"data row1 col2\" >87</td>\n","                        <td id=\"T_c23b67b2_b753_11ea_ae50_0242ac1c0002row1_col3\" class=\"data row1 col3\" >102</td>\n","            </tr>\n","    </tbody></table>"],"text/plain":["<pandas.io.formats.style.Styler at 0x7fe49dbd4eb8>"]},"metadata":{"tags":[]},"execution_count":28}]},{"cell_type":"code","metadata":{"id":"3zHJx4xyX4kG"},"source":["#@title Find Ticket info\n","df['Ticket_info'] = df['Ticket'].apply(lambda x : x.replace(\".\",\"\").replace(\"/\",\"\").strip().split(' ')[0] if not x.isdigit() else 'X')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tZZA95VEYJzB","colab":{"base_uri":"https://localhost:8080/","height":299},"executionInfo":{"status":"ok","timestamp":1593138096731,"user_tz":-480,"elapsed":73197,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"0160f587-89c7-4855-aa79-1a7d09d634f0"},"source":["sns.countplot(df['Ticket_info'], hue=df['Survived'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe49d8c9a20>"]},"metadata":{"tags":[]},"execution_count":30},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"markdown","metadata":{"id":"_0EgDGNRQgr2"},"source":["## 3.Data Cleaning\n","- Dealing with Missing Value : default:mean, median is the another option"]},{"cell_type":"code","metadata":{"id":"lmt0r_oRYfKi","colab":{"base_uri":"https://localhost:8080/","height":408},"executionInfo":{"status":"ok","timestamp":1593138096735,"user_tz":-480,"elapsed":73184,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"2ebd5322-68b5-4fba-ad11-27925b9d6785"},"source":["df.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1309 entries, 0 to 1308\n","Data columns (total 16 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  1309 non-null   int64  \n"," 1   Survived     891 non-null    float64\n"," 2   Pclass       1309 non-null   int64  \n"," 3   Name         1309 non-null   object \n"," 4   Sex          1309 non-null   object \n"," 5   Age          1046 non-null   float64\n"," 6   SibSp        1309 non-null   int64  \n"," 7   Parch        1309 non-null   int64  \n"," 8   Ticket       1309 non-null   object \n"," 9   Fare         1308 non-null   float64\n"," 10  Cabin        295 non-null    object \n"," 11  Embarked     1307 non-null   object \n"," 12  Family_Size  1309 non-null   int64  \n"," 13  Title1       1309 non-null   object \n"," 14  Title2       1309 non-null   object \n"," 15  Ticket_info  1309 non-null   object \n","dtypes: float64(3), int64(5), object(8)\n","memory usage: 163.8+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"p7qtSbFeYWp9"},"source":["#@title Fillna Embarked\n","df['Embarked'] = df['Embarked'].fillna('S')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"3b6NkEN3YnIO"},"source":["#@title Fillna Fare\n","df['Fare'] = df['Fare'].fillna(df['Fare'].mean())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"f_AEiXjoat1i"},"source":["#@title Fillna Cabin\n","df[\"Cabin\"] = df['Cabin'].apply(lambda x : str(x)[0] if not pd.isnull(x) else 'NoCabin')"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"FMNB4o-qbRu4"},"source":["#@title Fillna Age\n","df['Age'] = df['Age'].fillna(df['Age'].mean())"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"avpAJChcbYJ0","colab":{"base_uri":"https://localhost:8080/","height":408},"executionInfo":{"status":"ok","timestamp":1593138096738,"user_tz":-480,"elapsed":73124,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"fa1abbe5-7437-4002-f2d0-8aad877697f0"},"source":["df.info()"],"execution_count":null,"outputs":[{"output_type":"stream","text":["<class 'pandas.core.frame.DataFrame'>\n","RangeIndex: 1309 entries, 0 to 1308\n","Data columns (total 16 columns):\n"," #   Column       Non-Null Count  Dtype  \n","---  ------       --------------  -----  \n"," 0   PassengerId  1309 non-null   int64  \n"," 1   Survived     891 non-null    float64\n"," 2   Pclass       1309 non-null   int64  \n"," 3   Name         1309 non-null   object \n"," 4   Sex          1309 non-null   object \n"," 5   Age          1309 non-null   float64\n"," 6   SibSp        1309 non-null   int64  \n"," 7   Parch        1309 non-null   int64  \n"," 8   Ticket       1309 non-null   object \n"," 9   Fare         1309 non-null   float64\n"," 10  Cabin        1309 non-null   object \n"," 11  Embarked     1309 non-null   object \n"," 12  Family_Size  1309 non-null   int64  \n"," 13  Title1       1309 non-null   object \n"," 14  Title2       1309 non-null   object \n"," 15  Ticket_info  1309 non-null   object \n","dtypes: float64(3), int64(5), object(8)\n","memory usage: 163.8+ KB\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"rroDcoYEa0w7","colab":{"base_uri":"https://localhost:8080/","height":301},"executionInfo":{"status":"ok","timestamp":1593138097289,"user_tz":-480,"elapsed":73658,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"e3f6462c-e636-4dda-85dd-375890c29a51"},"source":["sns.countplot(df['Cabin'], hue=df['Survived'])"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/plain":["<matplotlib.axes._subplots.AxesSubplot at 0x7fe49d741c88>"]},"metadata":{"tags":[]},"execution_count":37},{"output_type":"display_data","data":{"image/png":"\n","text/plain":["<Figure size 432x288 with 1 Axes>"]},"metadata":{"tags":[]}}]},{"cell_type":"code","metadata":{"id":"zwGRvKmha8sO"},"source":["#@title Convert Categorical data to numeric\n","df['Sex'] = df['Sex'].astype('category').cat.codes\n","df['Embarked'] = df['Embarked'].astype('category').cat.codes\n","df['Pclass'] = df['Pclass'].astype('category').cat.codes\n","df['Title1'] = df['Title1'].astype('category').cat.codes\n","df['Title2'] = df['Title2'].astype('category').cat.codes\n","df['Cabin'] = df['Cabin'].astype('category').cat.codes\n","df['Ticket_info'] = df['Ticket_info'].astype('category').cat.codes"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"5aARX0Gkf5bc","colab":{"base_uri":"https://localhost:8080/","height":496},"executionInfo":{"status":"ok","timestamp":1593138097294,"user_tz":-480,"elapsed":73633,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"f2d8c7ba-467c-4a7b-ab2d-2fb92711d193"},"source":["df.head()"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>PassengerId</th>\n","      <th>Survived</th>\n","      <th>Pclass</th>\n","      <th>Name</th>\n","      <th>Sex</th>\n","      <th>Age</th>\n","      <th>SibSp</th>\n","      <th>Parch</th>\n","      <th>Ticket</th>\n","      <th>Fare</th>\n","      <th>Cabin</th>\n","      <th>Embarked</th>\n","      <th>Family_Size</th>\n","      <th>Title1</th>\n","      <th>Title2</th>\n","      <th>Ticket_info</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>0</th>\n","      <td>1</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>Braund, Mr. Owen Harris</td>\n","      <td>1</td>\n","      <td>22.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>A/5 21171</td>\n","      <td>7.2500</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>2</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>2</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>Cumings, Mrs. John Bradley (Florence Briggs Th...</td>\n","      <td>0</td>\n","      <td>38.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>PC 17599</td>\n","      <td>71.2833</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>14</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>3</td>\n","      <td>1.0</td>\n","      <td>2</td>\n","      <td>Heikkinen, Miss. Laina</td>\n","      <td>0</td>\n","      <td>26.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>STON/O2. 3101282</td>\n","      <td>7.9250</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>9</td>\n","      <td>1</td>\n","      <td>31</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>4</td>\n","      <td>1.0</td>\n","      <td>0</td>\n","      <td>Futrelle, Mrs. Jacques Heath (Lily May Peel)</td>\n","      <td>0</td>\n","      <td>35.0</td>\n","      <td>1</td>\n","      <td>0</td>\n","      <td>113803</td>\n","      <td>53.1000</td>\n","      <td>2</td>\n","      <td>2</td>\n","      <td>1</td>\n","      <td>13</td>\n","      <td>3</td>\n","      <td>36</td>\n","    </tr>\n","    <tr>\n","      <th>4</th>\n","      <td>5</td>\n","      <td>0.0</td>\n","      <td>2</td>\n","      <td>Allen, Mr. William Henry</td>\n","      <td>1</td>\n","      <td>35.0</td>\n","      <td>0</td>\n","      <td>0</td>\n","      <td>373450</td>\n","      <td>8.0500</td>\n","      <td>7</td>\n","      <td>2</td>\n","      <td>0</td>\n","      <td>12</td>\n","      <td>2</td>\n","      <td>36</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["   PassengerId  Survived  Pclass  ... Title1  Title2  Ticket_info\n","0            1       0.0       2  ...     12       2            2\n","1            2       1.0       0  ...     13       3           14\n","2            3       1.0       2  ...      9       1           31\n","3            4       1.0       0  ...     13       3           36\n","4            5       0.0       2  ...     12       2           36\n","\n","[5 rows x 16 columns]"]},"metadata":{"tags":[]},"execution_count":39}]},{"cell_type":"markdown","metadata":{"id":"qnv92IWjSmW9"},"source":["## 4.Modeling"]},{"cell_type":"code","metadata":{"id":"femav-h2bykn"},"source":["#@title Split Train & test data\n","dataTrain = df[pd.notnull(df['Survived'])].sort_values(by=[\"PassengerId\"])\n","dataTrain = dataTrain[['Survived', 'Age', 'Embarked', 'Fare',  'Pclass', 'Sex', 'Family_Size', 'Title2','Ticket_info','Cabin']]\n","\n","train_data = dataTrain.iloc[:, 1:]\n","train_target = dataTrain.iloc[:, 0]"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"gFkBgesNfiOn"},"source":["from sklearn.model_selection import train_test_split\n","\n","X_train, X_test, Y_train, Y_test = train_test_split(\n"," train_data, train_target, test_size=1/7.0, random_state=0)"],"execution_count":null,"outputs":[]},{"cell_type":"code","metadata":{"id":"tJc8LIe8jUX1","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593140182424,"user_tz":-480,"elapsed":825,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"de6c879c-0bc4-45c4-af30-825286c0f444"},"source":["#@title *Decision Tree\n","from sklearn.tree import DecisionTreeClassifier\n","\n","dt =DecisionTreeClassifier()\n","model = dt.fit(X_train, Y_train)\n","\n","# Use score method to get accuracy of model\n","score = model.score(X_test, Y_test)\n","print('Accuracy =',score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy = 0.8046875\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"NDbG1zNfbkUM","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593139919300,"user_tz":-480,"elapsed":3721,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"ccab072d-73dc-409a-967f-60e2c142db8c"},"source":["#@title *Random Forest\n","from sklearn.ensemble import RandomForestClassifier\n"," \n","rf = RandomForestClassifier(criterion='gini', \n","                             n_estimators=1000,\n","                             min_samples_split=12,\n","                             min_samples_leaf=1,\n","                             oob_score=True,\n","                             random_state=1,\n","                             n_jobs=-1) \n","\n","model = rf.fit(X_train, Y_train)\n","\n","score = model.score(X_test, Y_test)\n","print('Accuracy =',score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy = 0.828125\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"dzu0_cbIaovk","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593139904450,"user_tz":-480,"elapsed":728,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"c2c2be07-9267-4699-d59d-50f3b2443f9d"},"source":["#@title *Logistic Regression\n","from sklearn.linear_model import LogisticRegression\n","from sklearn.model_selection import cross_validate\n","\n","logreg = LogisticRegression()\n","model = logreg.fit(X_train, Y_train)\n","\n","# Use score method to get accuracy of model\n","score = model.score(X_test, Y_test)\n","print('Accuracy =',score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy = 0.7734375\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"GDf25E30g5IL","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593139892213,"user_tz":-480,"elapsed":770,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"7fda18dc-d291-47ec-97f0-093b1646203a"},"source":["#@title *SVM\n","from sklearn.svm import SVC, LinearSVC\n","\n","svc = SVC()\n","model = svc.fit(X_train, Y_train)\n","\n","# Use score method to get accuracy of model\n","score = model.score(X_test, Y_test)\n","print('Accuracy =',score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy = 0.6875\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"wx_155BUhc2O","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593139875774,"user_tz":-480,"elapsed":831,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"51f02a4d-a17b-4c88-b1a1-003f3d34498f"},"source":["#@title *KNN\n","from sklearn.neighbors import KNeighborsClassifier\n","\n","knn = KNeighborsClassifier(n_neighbors = 3)\n","model = knn.fit(X_train, Y_train)\n","\n","# Use score method to get accuracy of model\n","score = model.score(X_test, Y_test)\n","print('Accuracy =',score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy = 0.6875\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"mazUuK_TizQs","colab":{"base_uri":"https://localhost:8080/","height":34},"executionInfo":{"status":"ok","timestamp":1593140093524,"user_tz":-480,"elapsed":907,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"5fda7ec4-4812-42a3-d31e-9d1bd1fa24a3"},"source":["#@title *Naive Bayes\n","from sklearn.naive_bayes import GaussianNB\n","\n","nb = GaussianNB()\n","model = nb.fit(X_train, Y_train)\n","\n","# Use score method to get accuracy of model\n","score = model.score(X_test, Y_test)\n","print('Accuracy =',score)"],"execution_count":null,"outputs":[{"output_type":"stream","text":["Accuracy = 0.859375\n"],"name":"stdout"}]},{"cell_type":"code","metadata":{"id":"aHKHV5LzgULa","colab":{"base_uri":"https://localhost:8080/","height":328},"executionInfo":{"status":"ok","timestamp":1593140330071,"user_tz":-480,"elapsed":760,"user":{"displayName":"ChingChing Lee","photoUrl":"","userId":"16449948928545344997"}},"outputId":"c36365fe-7376-4466-a8c3-f81f97a09aa9"},"source":["#@title Feature Impotance \n","pd.concat((pd.DataFrame(dataTrain.iloc[:, 1:].columns, columns = ['variable']), \n","           pd.DataFrame(rf.feature_importances_, columns = ['importance'])), \n","          axis = 1).sort_values(by='importance', ascending = False)[:20]"],"execution_count":null,"outputs":[{"output_type":"execute_result","data":{"text/html":["<div>\n","<style scoped>\n","    .dataframe tbody tr th:only-of-type {\n","        vertical-align: middle;\n","    }\n","\n","    .dataframe tbody tr th {\n","        vertical-align: top;\n","    }\n","\n","    .dataframe thead th {\n","        text-align: right;\n","    }\n","</style>\n","<table border=\"1\" class=\"dataframe\">\n","  <thead>\n","    <tr style=\"text-align: right;\">\n","      <th></th>\n","      <th>variable</th>\n","      <th>importance</th>\n","    </tr>\n","  </thead>\n","  <tbody>\n","    <tr>\n","      <th>4</th>\n","      <td>Sex</td>\n","      <td>0.265885</td>\n","    </tr>\n","    <tr>\n","      <th>2</th>\n","      <td>Fare</td>\n","      <td>0.163547</td>\n","    </tr>\n","    <tr>\n","      <th>6</th>\n","      <td>Title2</td>\n","      <td>0.156992</td>\n","    </tr>\n","    <tr>\n","      <th>0</th>\n","      <td>Age</td>\n","      <td>0.138903</td>\n","    </tr>\n","    <tr>\n","      <th>3</th>\n","      <td>Pclass</td>\n","      <td>0.089381</td>\n","    </tr>\n","    <tr>\n","      <th>5</th>\n","      <td>Family_Size</td>\n","      <td>0.067410</td>\n","    </tr>\n","    <tr>\n","      <th>8</th>\n","      <td>Cabin</td>\n","      <td>0.056836</td>\n","    </tr>\n","    <tr>\n","      <th>7</th>\n","      <td>Ticket_info</td>\n","      <td>0.034431</td>\n","    </tr>\n","    <tr>\n","      <th>1</th>\n","      <td>Embarked</td>\n","      <td>0.026615</td>\n","    </tr>\n","  </tbody>\n","</table>\n","</div>"],"text/plain":["      variable  importance\n","4          Sex    0.265885\n","2         Fare    0.163547\n","6       Title2    0.156992\n","0          Age    0.138903\n","3       Pclass    0.089381\n","5  Family_Size    0.067410\n","8        Cabin    0.056836\n","7  Ticket_info    0.034431\n","1     Embarked    0.026615"]},"metadata":{"tags":[]},"execution_count":77}]},{"cell_type":"markdown","metadata":{"id":"MPVs1eXGSpSk"},"source":["## 5.Validation\n","\n","* K-Folds\n","\n","<img src=\"https://ethen8181.github.io/machine-learning/model_selection/img/kfolds.png\" alt=\"drawing\" width=\"600\"/>\n","\n","\n","\n","* Accuracy\t\n","* AUC\t\n","* Recall\t\n","* Precision\t\n","* F1\t\n","\n","<img src=\"https://2.bp.blogspot.com/-EvSXDotTOwc/XMfeOGZ-CVI/AAAAAAAAEiE/oePFfvhfOQM11dgRn9FkPxlegCXbgOF4QCLcBGAs/s1600/confusionMatrxiUpdated.jpg\" alt=\"drawing\" width=\"600\"/>\n","\n"]}]}